// <auto-generated />
using System;
using Heyday.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Heyday.Infrastructure.Migrations
{
    [DbContext(typeof(heydayContext))]
    partial class heydayContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Heyday.Domain.Entities.Schedule", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("deleted_by")
                        .HasColumnType("uuid");

                    b.Property<bool>("is_executed")
                        .HasColumnType("boolean");

                    b.Property<Guid>("manager_id")
                        .HasColumnType("uuid");

                    b.Property<TimeSpan>("period")
                        .HasColumnType("interval");

                    b.Property<string>("result")
                        .HasColumnType("text");

                    b.Property<DateTime?>("start_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.HasIndex("manager_id");

                    b.ToTable("schedules");
                });

            modelBuilder.Entity("Heyday.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("deleted_by")
                        .HasColumnType("uuid");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Heyday.Domain.Entities.UserSchedule", b =>
                {
                    b.Property<Guid>("user_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("schedule_id")
                        .HasColumnType("uuid");

                    b.Property<string>("exception")
                        .HasColumnType("text");

                    b.Property<string>("suitable_hours")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("user_id", "schedule_id");

                    b.HasIndex("schedule_id");

                    b.ToTable("user_schedule");
                });

            modelBuilder.Entity("Heyday.Domain.Entities.Schedule", b =>
                {
                    b.HasOne("Heyday.Domain.Entities.User", "user")
                        .WithMany("schedules")
                        .HasForeignKey("manager_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Heyday.Domain.Entities.UserSchedule", b =>
                {
                    b.HasOne("Heyday.Domain.Entities.Schedule", "schedule")
                        .WithMany("user_schedule")
                        .HasForeignKey("schedule_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Heyday.Domain.Entities.User", "user")
                        .WithMany("user_schedule")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("schedule");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Heyday.Domain.Entities.Schedule", b =>
                {
                    b.Navigation("user_schedule");
                });

            modelBuilder.Entity("Heyday.Domain.Entities.User", b =>
                {
                    b.Navigation("schedules");

                    b.Navigation("user_schedule");
                });
#pragma warning restore 612, 618
        }
    }
}
